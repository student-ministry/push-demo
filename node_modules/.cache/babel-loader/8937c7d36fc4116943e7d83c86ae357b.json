{"ast":null,"code":"import _defineProperty from\"/home/youpeng.huang/test/react-native/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/youpeng.huang/test/react-native/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/youpeng.huang/test/react-native/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/youpeng.huang/test/react-native/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/youpeng.huang/test/react-native/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/youpeng.huang/test/react-native/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import'./History.css';import axios from'axios';import moment from'moment';import{SectionBox}from\"./SectionBox\";var History=/*#__PURE__*/function(_Component){_inherits(History,_Component);function History(){var _this;_classCallCheck(this,History);_this=_possibleConstructorReturn(this,_getPrototypeOf(History).call(this));_this.saveStateToLocalStorage=function(){localStorage.setItem('history-state',JSON.stringify(_this.state));};_this.restoreStateFromLocalStorage=function(){var state=JSON.parse(localStorage.getItem('today-state'));console.log(state);_this.setState(state);};_this.getPriceForDay=function(){var daysCount=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var key=arguments.length>1?arguments[1]:undefined;var time=moment().subtract(daysCount,'days').unix();axios.all([_this.getETHPrices(time),_this.getBTCPrices(time),_this.getLTCPrices(time)]).then(axios.spread(function(eth,btc,ltc){/** Have clear names for your variables, what is f supposed to be? **/var f={date:moment.unix(time).format(\"MMMM Do YYYY\"),eth:eth.data.ETH.USD,btc:btc.data.BTC.USD,ltc:ltc.data.LTC.USD};_this.setState(_defineProperty({},key,f),_this.saveStateToLocalStorage);}));};_this.getCurrencyPrice=function(date,currency){return axios.get(\"https://min-api.cryptocompare.com/data/pricehistorical?fsym=\".concat(currency,\"&tsyms=USD&ts=\").concat(date));};_this.getETHPrices=function(date){return _this.getCurrencyPrice(date,'ETH');};_this.getBTCPrices=function(date){return _this.getCurrencyPrice(date,'BTC');};_this.getLTCPrices=function(date){return _this.getCurrencyPrice(date,'LTC');};_this.state={todayprice:{},yesterdayprice:{},twodaysprice:{},threedaysprice:{},fourdaysprice:{}};/** Let's use arrow functions instead of using bind\n        this.getBTCPrices = this.getBTCPrices.bind(this);\n        this.getETHPrices = this.getETHPrices.bind(this);\n        this.getLTCPrices = this.getLTCPrices.bind(this);\n         **/return _this;}/**\n     * Let's create utilitary functions to keep our code D.R.Y.\n\t */_createClass(History,[{key:\"componentDidMount\",/**\n     * Now we can define all those functions like this ! :-)\n     * Or ... we can do it programmaticaly like below\n    getTodayPrice = () => this.getPriceForDay(0, 'todayprice');\n    getYesterdayPrice = () => this.getPriceForDay(1, 'yesterdayprice');\n    getTwoDaysPrice = () => this.getPriceForDay(2, 'twodaysprice');\n    getThreeDaysPrice = () => this.getPriceForDay(3, 'threedaysprice');\n    getFourDaysPrice = () => this.getFourDaysPrice(4, 'fourdaysprice');**/value:function componentDidMount(){if(!navigator.onLine){this.restoreStateFromLocalStorage();}var days=['today','yesterday','twodays','threedays','fourdays'];for(var day in days){this.getPriceForDay(day,\"\".concat(days[day],\"price\"));}/** We can simplify it but.. Thats just a style thing aswell\n        this.getTodayPrice();\n        this.getYesterdayPrice();\n        this.getTwoDaysPrice();\n        this.getThreeDaysPrice();\n        this.getFourDaysPrice();**/}},{key:\"render\",value:function render(){/**\n\t\t * By creating components and extracting the variable at the top here, we created a much cleaner\n\t\t * version of it ! :-)\n\t\t */var _this$state=this.state,todayprice=_this$state.todayprice,yesterdayprice=_this$state.yesterdayprice,twodaysprice=_this$state.twodaysprice,threedaysprice=_this$state.threedaysprice,fourdaysprice=_this$state.fourdaysprice;console.log(this.state);return React.createElement(\"div\",{className:\"history--section container\"},React.createElement(\"h2\",null,\"History (Past 5 days)\"),React.createElement(\"div\",{className:\"history--section__box\"},React.createElement(SectionBox,{price:todayprice}),React.createElement(SectionBox,{price:yesterdayprice}),React.createElement(SectionBox,{price:twodaysprice}),React.createElement(SectionBox,{price:threedaysprice}),React.createElement(SectionBox,{price:fourdaysprice})));}}]);return History;}(Component);export default History;","map":{"version":3,"sources":["/home/youpeng.huang/test/react-native/my-app/src/History/History.js"],"names":["React","Component","axios","moment","SectionBox","History","saveStateToLocalStorage","localStorage","setItem","JSON","stringify","state","restoreStateFromLocalStorage","parse","getItem","console","log","setState","getPriceForDay","daysCount","key","time","subtract","unix","all","getETHPrices","getBTCPrices","getLTCPrices","then","spread","eth","btc","ltc","f","date","format","data","ETH","USD","BTC","LTC","getCurrencyPrice","currency","get","todayprice","yesterdayprice","twodaysprice","threedaysprice","fourdaysprice","navigator","onLine","days","day"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './History.css'\nimport axios from 'axios'\nimport moment from 'moment'\nimport {SectionBox} from \"./SectionBox\";\n\nclass History extends Component {\n    constructor () {\n        super();\n        this.state = {\n            todayprice: {},\n            yesterdayprice: {},\n            twodaysprice: {},\n            threedaysprice: {},\n            fourdaysprice: {}\n        };\n        /** Let's use arrow functions instead of using bind\n        this.getBTCPrices = this.getBTCPrices.bind(this);\n        this.getETHPrices = this.getETHPrices.bind(this);\n        this.getLTCPrices = this.getLTCPrices.bind(this);\n         **/\n    }\n\n\t/**\n     * Let's create utilitary functions to keep our code D.R.Y.\n\t */\n\n\tsaveStateToLocalStorage = () => {\n\t\tlocalStorage.setItem('history-state', JSON.stringify(this.state));\n\t};\n\n\trestoreStateFromLocalStorage = () => {\n\t\tconst state = JSON.parse(localStorage.getItem('today-state'));\n\t\tconsole.log(state);\n\t\tthis.setState(state);\n\t};\n\n\tgetPriceForDay = (daysCount = 0, key) => {\n\t\tconst time = moment().subtract(daysCount, 'days').unix();\n\t\taxios.all([this.getETHPrices(time), this.getBTCPrices(time), this.getLTCPrices(time)])\n\t\t\t.then(axios.spread((eth, btc, ltc) => {\n\t\t\t    /** Have clear names for your variables, what is f supposed to be? **/\n\t\t\t\tlet f = {\n\t\t\t\t\tdate: moment.unix(time).format(\"MMMM Do YYYY\"),\n\t\t\t\t\teth: eth.data.ETH.USD,\n\t\t\t\t\tbtc: btc.data.BTC.USD,\n\t\t\t\t\tltc: ltc.data.LTC.USD\n\t\t\t\t};\n\t\t\t\tthis.setState({\n                    [key]: f\n                }, this.saveStateToLocalStorage);\n\t\t\t}));\n\t};\n\n\tgetCurrencyPrice = (date, currency) =>\n        axios.get(`https://min-api.cryptocompare.com/data/pricehistorical?fsym=${currency}&tsyms=USD&ts=${date}`);\n\n\tgetETHPrices = (date) => this.getCurrencyPrice(date, 'ETH');\n    getBTCPrices = (date) => this.getCurrencyPrice(date, 'BTC');\n    getLTCPrices = (date) => this.getCurrencyPrice(date, 'LTC');\n\n    /**\n     * Now we can define all those functions like this ! :-)\n     * Or ... we can do it programmaticaly like below\n    getTodayPrice = () => this.getPriceForDay(0, 'todayprice');\n    getYesterdayPrice = () => this.getPriceForDay(1, 'yesterdayprice');\n    getTwoDaysPrice = () => this.getPriceForDay(2, 'twodaysprice');\n    getThreeDaysPrice = () => this.getPriceForDay(3, 'threedaysprice');\n    getFourDaysPrice = () => this.getFourDaysPrice(4, 'fourdaysprice');**/\n\n    componentDidMount () {\n\t\tif (!navigator.onLine) {\n\t\t    this.restoreStateFromLocalStorage();\n\t\t}\n        const days = ['today', 'yesterday', 'twodays', 'threedays', 'fourdays'];\n        for(const day in days){\n            this.getPriceForDay(day, `${days[day]}price`);\n        }\n        /** We can simplify it but.. Thats just a style thing aswell\n        this.getTodayPrice();\n        this.getYesterdayPrice();\n        this.getTwoDaysPrice();\n        this.getThreeDaysPrice();\n        this.getFourDaysPrice();**/\n    }\n    render() {\n\t\t/**\n\t\t * By creating components and extracting the variable at the top here, we created a much cleaner\n\t\t * version of it ! :-)\n\t\t */\n\t\tconst {todayprice, yesterdayprice, twodaysprice, threedaysprice, fourdaysprice} = this.state;\n\t\tconsole.log(this.state);\n    \treturn (\n            <div className=\"history--section container\">\n                <h2>History (Past 5 days)</h2>\n                <div className=\"history--section__box\">\n\t\t\t\t\t<SectionBox price={todayprice}/>\n\t\t\t\t\t<SectionBox price={yesterdayprice}/>\n\t\t\t\t\t<SectionBox price={twodaysprice}/>\n\t\t\t\t\t<SectionBox price={threedaysprice}/>\n\t\t\t\t\t<SectionBox price={fourdaysprice}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default History;"]},"metadata":{},"sourceType":"module"}