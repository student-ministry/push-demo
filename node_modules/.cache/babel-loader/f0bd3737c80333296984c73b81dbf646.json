{"ast":null,"code":"var _jsxFileName = \"/home/youpeng.huang/test/react-native/my-app/src/History/History.js\";\nimport React, { Component } from 'react';\nimport './History.css';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { SectionBox } from \"./SectionBox\";\n\nclass History extends Component {\n  constructor() {\n    super();\n\n    this.saveStateToLocalStorage = () => {\n      localStorage.setItem('history-state', JSON.stringify(this.state));\n    };\n\n    this.restoreStateFromLocalStorage = () => {\n      const state = JSON.parse(localStorage.getItem('today-state'));\n      console.log(state);\n      this.setState(state);\n    };\n\n    this.getPriceForDay = (daysCount = 0, key) => {\n      const time = moment().subtract(daysCount, 'days').unix();\n      axios.all([this.getETHPrices(time), this.getBTCPrices(time), this.getLTCPrices(time)]).then(axios.spread((eth, btc, ltc) => {\n        /** Have clear names for your variables, what is f supposed to be? **/\n        let f = {\n          date: moment.unix(time).format(\"MMMM Do YYYY\"),\n          eth: eth.data.ETH.USD,\n          btc: btc.data.BTC.USD,\n          ltc: ltc.data.LTC.USD\n        };\n        this.setState({\n          [key]: f\n        }, this.saveStateToLocalStorage);\n      }));\n    };\n\n    this.getCurrencyPrice = (date, currency) => axios.get(`https://min-api.cryptocompare.com/data/pricehistorical?fsym=${currency}&tsyms=USD&ts=${date}`);\n\n    this.getETHPrices = date => this.getCurrencyPrice(date, 'ETH');\n\n    this.getBTCPrices = date => this.getCurrencyPrice(date, 'BTC');\n\n    this.getLTCPrices = date => this.getCurrencyPrice(date, 'LTC');\n\n    this.state = {\n      todayprice: {},\n      yesterdayprice: {},\n      twodaysprice: {},\n      threedaysprice: {},\n      fourdaysprice: {}\n    };\n    /** Let's use arrow functions instead of using bind\n    this.getBTCPrices = this.getBTCPrices.bind(this);\n    this.getETHPrices = this.getETHPrices.bind(this);\n    this.getLTCPrices = this.getLTCPrices.bind(this);\n     **/\n  }\n  /**\n      * Let's create utilitary functions to keep our code D.R.Y.\n   */\n\n\n  /**\n   * Now we can define all those functions like this ! :-)\n   * Or ... we can do it programmaticaly like below\n  getTodayPrice = () => this.getPriceForDay(0, 'todayprice');\n  getYesterdayPrice = () => this.getPriceForDay(1, 'yesterdayprice');\n  getTwoDaysPrice = () => this.getPriceForDay(2, 'twodaysprice');\n  getThreeDaysPrice = () => this.getPriceForDay(3, 'threedaysprice');\n  getFourDaysPrice = () => this.getFourDaysPrice(4, 'fourdaysprice');**/\n  componentDidMount() {\n    if (!navigator.onLine) {\n      this.restoreStateFromLocalStorage();\n    }\n\n    const days = ['today', 'yesterday', 'twodays', 'threedays', 'fourdays'];\n\n    for (const day in days) {\n      this.getPriceForDay(day, `${days[day]}price`);\n    }\n    /** We can simplify it but.. Thats just a style thing aswell\n    this.getTodayPrice();\n    this.getYesterdayPrice();\n    this.getTwoDaysPrice();\n    this.getThreeDaysPrice();\n    this.getFourDaysPrice();**/\n\n  }\n\n  render() {\n    /**\n     * By creating components and extracting the variable at the top here, we created a much cleaner\n     * version of it ! :-)\n     */\n    const {\n      todayprice,\n      yesterdayprice,\n      twodaysprice,\n      threedaysprice,\n      fourdaysprice\n    } = this.state;\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"history--section container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"History (Past 5 days)\"), React.createElement(\"div\", {\n      className: \"history--section__box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(SectionBox, {\n      price: todayprice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(SectionBox, {\n      price: yesterdayprice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(SectionBox, {\n      price: twodaysprice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(SectionBox, {\n      price: threedaysprice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(SectionBox, {\n      price: fourdaysprice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default History;","map":{"version":3,"sources":["/home/youpeng.huang/test/react-native/my-app/src/History/History.js"],"names":["React","Component","axios","moment","SectionBox","History","constructor","saveStateToLocalStorage","localStorage","setItem","JSON","stringify","state","restoreStateFromLocalStorage","parse","getItem","console","log","setState","getPriceForDay","daysCount","key","time","subtract","unix","all","getETHPrices","getBTCPrices","getLTCPrices","then","spread","eth","btc","ltc","f","date","format","data","ETH","USD","BTC","LTC","getCurrencyPrice","currency","get","todayprice","yesterdayprice","twodaysprice","threedaysprice","fourdaysprice","componentDidMount","navigator","onLine","days","day","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,UAAR,QAAyB,cAAzB;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAC5BK,EAAAA,WAAW,GAAI;AACX;;AADW,SAoBlBC,uBApBkB,GAoBQ,MAAM;AAC/BC,MAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAApB,CAAtC;AACA,KAtBiB;;AAAA,SAwBlBC,4BAxBkB,GAwBa,MAAM;AACpC,YAAMD,KAAK,GAAGF,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACO,OAAb,CAAqB,aAArB,CAAX,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,WAAKM,QAAL,CAAcN,KAAd;AACA,KA5BiB;;AAAA,SA8BlBO,cA9BkB,GA8BD,CAACC,SAAS,GAAG,CAAb,EAAgBC,GAAhB,KAAwB;AACxC,YAAMC,IAAI,GAAGnB,MAAM,GAAGoB,QAAT,CAAkBH,SAAlB,EAA6B,MAA7B,EAAqCI,IAArC,EAAb;AACAtB,MAAAA,KAAK,CAACuB,GAAN,CAAU,CAAC,KAAKC,YAAL,CAAkBJ,IAAlB,CAAD,EAA0B,KAAKK,YAAL,CAAkBL,IAAlB,CAA1B,EAAmD,KAAKM,YAAL,CAAkBN,IAAlB,CAAnD,CAAV,EACEO,IADF,CACO3B,KAAK,CAAC4B,MAAN,CAAa,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,KAAmB;AAClC;AACH,YAAIC,CAAC,GAAG;AACPC,UAAAA,IAAI,EAAEhC,MAAM,CAACqB,IAAP,CAAYF,IAAZ,EAAkBc,MAAlB,CAAyB,cAAzB,CADC;AAEPL,UAAAA,GAAG,EAAEA,GAAG,CAACM,IAAJ,CAASC,GAAT,CAAaC,GAFX;AAGPP,UAAAA,GAAG,EAAEA,GAAG,CAACK,IAAJ,CAASG,GAAT,CAAaD,GAHX;AAIPN,UAAAA,GAAG,EAAEA,GAAG,CAACI,IAAJ,CAASI,GAAT,CAAaF;AAJX,SAAR;AAMA,aAAKrB,QAAL,CAAc;AACE,WAACG,GAAD,GAAOa;AADT,SAAd,EAEe,KAAK3B,uBAFpB;AAGA,OAXK,CADP;AAaA,KA7CiB;;AAAA,SA+ClBmC,gBA/CkB,GA+CC,CAACP,IAAD,EAAOQ,QAAP,KACZzC,KAAK,CAAC0C,GAAN,CAAW,+DAA8DD,QAAS,iBAAgBR,IAAK,EAAvG,CAhDW;;AAAA,SAkDlBT,YAlDkB,GAkDFS,IAAD,IAAU,KAAKO,gBAAL,CAAsBP,IAAtB,EAA4B,KAA5B,CAlDP;;AAAA,SAmDfR,YAnDe,GAmDCQ,IAAD,IAAU,KAAKO,gBAAL,CAAsBP,IAAtB,EAA4B,KAA5B,CAnDV;;AAAA,SAoDfP,YApDe,GAoDCO,IAAD,IAAU,KAAKO,gBAAL,CAAsBP,IAAtB,EAA4B,KAA5B,CApDV;;AAEX,SAAKvB,KAAL,GAAa;AACTiC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,cAAc,EAAE,EAFP;AAGTC,MAAAA,YAAY,EAAE,EAHL;AAITC,MAAAA,cAAc,EAAE,EAJP;AAKTC,MAAAA,aAAa,EAAE;AALN,KAAb;AAOA;;;;;AAKH;AAEJ;;;;;AAsCG;;;;;;;;AASAC,EAAAA,iBAAiB,GAAI;AACvB,QAAI,CAACC,SAAS,CAACC,MAAf,EAAuB;AACnB,WAAKvC,4BAAL;AACH;;AACK,UAAMwC,IAAI,GAAG,CAAC,OAAD,EAAU,WAAV,EAAuB,SAAvB,EAAkC,WAAlC,EAA+C,UAA/C,CAAb;;AACA,SAAI,MAAMC,GAAV,IAAiBD,IAAjB,EAAsB;AAClB,WAAKlC,cAAL,CAAoBmC,GAApB,EAA0B,GAAED,IAAI,CAACC,GAAD,CAAM,OAAtC;AACH;AACD;;;;;;;AAMH;;AACDC,EAAAA,MAAM,GAAG;AACX;;;;AAIA,UAAM;AAACV,MAAAA,UAAD;AAAaC,MAAAA,cAAb;AAA6BC,MAAAA,YAA7B;AAA2CC,MAAAA,cAA3C;AAA2DC,MAAAA;AAA3D,QAA4E,KAAKrC,KAAvF;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACG,WACO;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,EAEI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACX,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEiC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADW,EAEX,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFW,EAGX,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHW,EAIX,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJW,EAKX,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALW,CAFJ,CADP;AAYA;;AAlG2B;;AAqGhC,eAAe5C,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport './History.css'\nimport axios from 'axios'\nimport moment from 'moment'\nimport {SectionBox} from \"./SectionBox\";\n\nclass History extends Component {\n    constructor () {\n        super();\n        this.state = {\n            todayprice: {},\n            yesterdayprice: {},\n            twodaysprice: {},\n            threedaysprice: {},\n            fourdaysprice: {}\n        };\n        /** Let's use arrow functions instead of using bind\n        this.getBTCPrices = this.getBTCPrices.bind(this);\n        this.getETHPrices = this.getETHPrices.bind(this);\n        this.getLTCPrices = this.getLTCPrices.bind(this);\n         **/\n    }\n\n\t/**\n     * Let's create utilitary functions to keep our code D.R.Y.\n\t */\n\n\tsaveStateToLocalStorage = () => {\n\t\tlocalStorage.setItem('history-state', JSON.stringify(this.state));\n\t};\n\n\trestoreStateFromLocalStorage = () => {\n\t\tconst state = JSON.parse(localStorage.getItem('today-state'));\n\t\tconsole.log(state);\n\t\tthis.setState(state);\n\t};\n\n\tgetPriceForDay = (daysCount = 0, key) => {\n\t\tconst time = moment().subtract(daysCount, 'days').unix();\n\t\taxios.all([this.getETHPrices(time), this.getBTCPrices(time), this.getLTCPrices(time)])\n\t\t\t.then(axios.spread((eth, btc, ltc) => {\n\t\t\t    /** Have clear names for your variables, what is f supposed to be? **/\n\t\t\t\tlet f = {\n\t\t\t\t\tdate: moment.unix(time).format(\"MMMM Do YYYY\"),\n\t\t\t\t\teth: eth.data.ETH.USD,\n\t\t\t\t\tbtc: btc.data.BTC.USD,\n\t\t\t\t\tltc: ltc.data.LTC.USD\n\t\t\t\t};\n\t\t\t\tthis.setState({\n                    [key]: f\n                }, this.saveStateToLocalStorage);\n\t\t\t}));\n\t};\n\n\tgetCurrencyPrice = (date, currency) =>\n        axios.get(`https://min-api.cryptocompare.com/data/pricehistorical?fsym=${currency}&tsyms=USD&ts=${date}`);\n\n\tgetETHPrices = (date) => this.getCurrencyPrice(date, 'ETH');\n    getBTCPrices = (date) => this.getCurrencyPrice(date, 'BTC');\n    getLTCPrices = (date) => this.getCurrencyPrice(date, 'LTC');\n\n    /**\n     * Now we can define all those functions like this ! :-)\n     * Or ... we can do it programmaticaly like below\n    getTodayPrice = () => this.getPriceForDay(0, 'todayprice');\n    getYesterdayPrice = () => this.getPriceForDay(1, 'yesterdayprice');\n    getTwoDaysPrice = () => this.getPriceForDay(2, 'twodaysprice');\n    getThreeDaysPrice = () => this.getPriceForDay(3, 'threedaysprice');\n    getFourDaysPrice = () => this.getFourDaysPrice(4, 'fourdaysprice');**/\n\n    componentDidMount () {\n\t\tif (!navigator.onLine) {\n\t\t    this.restoreStateFromLocalStorage();\n\t\t}\n        const days = ['today', 'yesterday', 'twodays', 'threedays', 'fourdays'];\n        for(const day in days){\n            this.getPriceForDay(day, `${days[day]}price`);\n        }\n        /** We can simplify it but.. Thats just a style thing aswell\n        this.getTodayPrice();\n        this.getYesterdayPrice();\n        this.getTwoDaysPrice();\n        this.getThreeDaysPrice();\n        this.getFourDaysPrice();**/\n    }\n    render() {\n\t\t/**\n\t\t * By creating components and extracting the variable at the top here, we created a much cleaner\n\t\t * version of it ! :-)\n\t\t */\n\t\tconst {todayprice, yesterdayprice, twodaysprice, threedaysprice, fourdaysprice} = this.state;\n\t\tconsole.log(this.state);\n    \treturn (\n            <div className=\"history--section container\">\n                <h2>History (Past 5 days)</h2>\n                <div className=\"history--section__box\">\n\t\t\t\t\t<SectionBox price={todayprice}/>\n\t\t\t\t\t<SectionBox price={yesterdayprice}/>\n\t\t\t\t\t<SectionBox price={twodaysprice}/>\n\t\t\t\t\t<SectionBox price={threedaysprice}/>\n\t\t\t\t\t<SectionBox price={fourdaysprice}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default History;"]},"metadata":{},"sourceType":"module"}